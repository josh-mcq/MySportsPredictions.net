<?php
/*
 * This is the object that is created when I fill in the new games form.  I can put in as many as I need ahead of time.
 *METHODS:
 * public function __construct($_game_date, $_home_key, $_away_key, $_home_score, $_away_score, $_timestamp)
 * public function storeMatch()
 * public function getKey()
 * public static function getAllGames()
 * public static function autoStoreGames() 
 * public static function autoGetGames() 
 * public static function deleteMatch($matchKey)  
 * public static function flipdiagonally($arr)
 */
class Match
{
  public $game_date;
  public $home_key;
  public $away_key;
  public $home_score;
  public $away_score;
  public $timestamp;
  
  public function __construct($_game_date, $_home_key, $_away_key, $_home_score, $_away_score, $_timestamp)
  { 
    $this->game_date = $_game_date;
	$this->home_key = $_home_key;
	$this->away_key = $_away_key;
	$this->home_score = $_home_score;
	$this->away_score = $_away_score;
	$this->timestamp = $_timestamp;
  }
  
  public function storeMatch()
  {
    $data = json_encode($this);
	$key = $this->getKey();
	$api_key = "df907765-3c1e-4508-bf98-cbff6506cde7";
	$url = "https://api.orchestrate.io/v0/matches/" . $key;
    $ch = curl_init(); 
	curl_setopt($ch, CURLOPT_URL, $url); 
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");
    curl_setopt($ch, CURLOPT_POSTFIELDS,($data));
	curl_setopt($ch, CURLOPT_USERPWD, $api_key);
   //somewhere
	curl_setopt($ch, CURLOPT_HTTPHEADER, 
	array('Content-Type: application/json','Accept-Language:application/json')); 
	$output = curl_exec($ch);
	$info = curl_getinfo($ch);
	curl_close($ch);
	return $data;
   }
	
  public function getKey()
  {	
     $a = str_replace("the_", "", $this->home_key) . "_"; 
	 $b = str_replace("the_", "", $this->away_key) . "_";
	 $c = $this->game_date;
	 return $a . $b . $c;
  }
  public static function getAllGames() 
  {
    $your_api_key = "df907765-3c1e-4508-bf98-cbff6506cde7";
	//$in2days = mktime(0,0,0,date("m"),date("d")+2,date("Y"));
	//$querystring =  "timestamp:[0 TO " . 9999999999 . "]";
	$querystring = "*";
	$url = "https://api.orchestrate.io/v0/matches/?query=" . urlencode($querystring);
    $ch = curl_init(); 
	curl_setopt($ch, CURLOPT_URL, $url); 
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); 
	curl_setopt($ch, CURLOPT_USERPWD, $your_api_key);

	curl_setopt($ch, CURLOPT_HTTPHEADER, 
	array('Content-Type: application/json','Accept-Language:application/json')); 
	$output = curl_exec($ch);
	$info = curl_getinfo($ch);
	curl_close($ch);
	return $output;
	}
	
	// take events array, parse and store each match.
	public static function autoStoreGames() 
	{
		
	$events_json = Match::autoGetGames();
	$events = json_decode($events_json);
	foreach($events as $event) {
	$timestamp = date("U",strtotime($event['events_date']));
	$game_date = explode("T",$event['events_date'])[0];
	$newMatch[] = new Match($game_date, $event['event']['home_team']['team_id'], $event['event']['away_team']['team_id'], '', '', $timestamp); 
	}
	return $newMatch[];
	}
	
	public static function autoGetGames() 
	{
	function getNthDay($n) {
	$nthdate = date('Ymd')+$n;
	return $nthdate;
	}
    $ACCESS_TOKEN = "0b054483-d4f6-477e-a186-615842e91010";
	//$game_date = date();
	$url = "https://erikberg.com/events.json?date=" . getNthDay(7) . "&sport=nba";
    $ch = curl_init(); 
	curl_setopt($ch, CURLOPT_URL, $url); 
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_USERAGENT, "info@joshmcquiston.com");	
	curl_setopt($ch, CURLOPT_HTTPHEADER, 
	array('Authorization: Bearer ' . $ACCESS_TOKEN)); 
	$output = curl_exec($ch);
	curl_close($ch);
	return $output;
	}
	
	
	
    public static function deleteMatch($matchKey)   
    {
	$api_key = "df907765-3c1e-4508-bf98-cbff6506cde7";
	$url = "https://api.orchestrate.io/v0/matches/" . $matchKey;
    $ch = curl_init(); 
	curl_setopt($ch, CURLOPT_URL, $url); 
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "DELETE");
    curl_setopt($ch, CURLOPT_POSTFIELDS,($data));
	curl_setopt($ch, CURLOPT_USERPWD, $api_key);
    curl_setopt($ch, CURLOPT_HTTPHEADER, 
	array('Content-Type: application/json','Accept-Language:application/json')); 
	$output = curl_exec($ch);
	$info = curl_getinfo($ch);
	curl_close($ch);
	return $matchKey;
  }
  
  public static function flipdiagonally($arr)
  {
    $out = array();
    foreach ($arr as $key => $subarr) {
    	foreach ($subarr as $subkey => $subvalue) {
    		$out[$subkey][$key] = $subvalue;
    	}
    }
    return $out;
  }
  
  
}	 
?>  
